// KeyCode.h

#pragma once

// copied straight from wx
enum KeyCode
{
	K_NONE = 0,

	K_CONTROL_A = 1,
	K_CONTROL_B,
	K_CONTROL_C,
	K_CONTROL_D,
	K_CONTROL_E,
	K_CONTROL_F,
	K_CONTROL_G,
	K_CONTROL_H,
	K_CONTROL_I,
	K_CONTROL_J,
	K_CONTROL_K,
	K_CONTROL_L,
	K_CONTROL_M,
	K_CONTROL_N,
	K_CONTROL_O,
	K_CONTROL_P,
	K_CONTROL_Q,
	K_CONTROL_R,
	K_CONTROL_S,
	K_CONTROL_T,
	K_CONTROL_U,
	K_CONTROL_V,
	K_CONTROL_W,
	K_CONTROL_X,
	K_CONTROL_Y,
	K_CONTROL_Z,

	K_BACK = 8, /* backspace */
	K_TAB = 9,
	K_RETURN = 13,
	K_ESCAPE = 27,

	/* values from 33 to 126 are reserved for the standard ASCII characters */

	K_SPACE = 32,
	K_A = 65,
	K_B,
	K_C,
	K_D,
	K_E,
	K_F,
	K_G,
	K_H,
	K_I,
	K_J,
	K_K,
	K_L,
	K_M,
	K_N,
	K_O,
	K_P,
	K_Q,
	K_R,
	K_S,
	K_T,
	K_U,
	K_V,
	K_W,
	K_X,
	K_Y,
	K_Z,
	K_DELETE = 127,

	/* values from 128 to 255 are reserved for ASCII extended characters
	(note that there isn't a single fixed standard for the meaning
	of these values; avoid them in portable apps!) */

	/* These are not compatible with unicode characters.
	If you want to get a unicode character from a key event, use
	wxKeyEvent::GetUnicodeKey                                    */
	K_START = 300,
	K_LBUTTON,
	K_RBUTTON,
	K_CANCEL,
	K_MBUTTON,
	K_CLEAR,
	K_SHIFT,
	K_ALT,
	K_CONTROL,
	K_MENU,
	K_PAUSE,
	K_CAPITAL,
	K_END,
	K_HOME,
	K_LEFT,
	K_UP,
	K_RIGHT,
	K_DOWN,
	K_SELECT,
	K_PRINT,
	K_EXECUTE,
	K_SNAPSHOT,
	K_INSERT,
	K_HELP,
	K_NUMPAD0,
	K_NUMPAD1,
	K_NUMPAD2,
	K_NUMPAD3,
	K_NUMPAD4,
	K_NUMPAD5,
	K_NUMPAD6,
	K_NUMPAD7,
	K_NUMPAD8,
	K_NUMPAD9,
	K_MULTIPLY,
	K_ADD,
	K_SEPARATOR,
	K_SUBTRACT,
	K_DECIMAL,
	K_DIVIDE,
	K_F1,
	K_F2,
	K_F3,
	K_F4,
	K_F5,
	K_F6,
	K_F7,
	K_F8,
	K_F9,
	K_F10,
	K_F11,
	K_F12,
	K_F13,
	K_F14,
	K_F15,
	K_F16,
	K_F17,
	K_F18,
	K_F19,
	K_F20,
	K_F21,
	K_F22,
	K_F23,
	K_F24,
	K_NUMLOCK,
	K_SCROLL,
	K_PAGEUP,
	K_PAGEDOWN,
#if WXWIN_COMPATIBILITY_2_6
	K_PRIOR = K_PAGEUP,
	K_NEXT = K_PAGEDOWN,
#endif

	K_NUMPAD_SPACE,
	K_NUMPAD_TAB,
	K_NUMPAD_ENTER,
	K_NUMPAD_F1,
	K_NUMPAD_F2,
	K_NUMPAD_F3,
	K_NUMPAD_F4,
	K_NUMPAD_HOME,
	K_NUMPAD_LEFT,
	K_NUMPAD_UP,
	K_NUMPAD_RIGHT,
	K_NUMPAD_DOWN,
	K_NUMPAD_PAGEUP,
	K_NUMPAD_PAGEDOWN,
#if WXWIN_COMPATIBILITY_2_6
	K_NUMPAD_PRIOR = K_NUMPAD_PAGEUP,
	K_NUMPAD_NEXT = K_NUMPAD_PAGEDOWN,
#endif
	K_NUMPAD_END,
	K_NUMPAD_BEGIN,
	K_NUMPAD_INSERT,
	K_NUMPAD_DELETE,
	K_NUMPAD_EQUAL,
	K_NUMPAD_MULTIPLY,
	K_NUMPAD_ADD,
	K_NUMPAD_SEPARATOR,
	K_NUMPAD_SUBTRACT,
	K_NUMPAD_DECIMAL,
	K_NUMPAD_DIVIDE,

	K_WINDOWS_LEFT,
	K_WINDOWS_RIGHT,
	K_WINDOWS_MENU,
#ifdef __WXOSX__
	K_RAW_CONTROL,
#else
	K_RAW_CONTROL = K_CONTROL,
#endif
	K_COMMAND = K_CONTROL,

	/* Hardware-specific buttons */
	K_SPECIAL1 = 193,
	K_SPECIAL2,
	K_SPECIAL3,
	K_SPECIAL4,
	K_SPECIAL5,
	K_SPECIAL6,
	K_SPECIAL7,
	K_SPECIAL8,
	K_SPECIAL9,
	K_SPECIAL10,
	K_SPECIAL11,
	K_SPECIAL12,
	K_SPECIAL13,
	K_SPECIAL14,
	K_SPECIAL15,
	K_SPECIAL16,
	K_SPECIAL17,
	K_SPECIAL18,
	K_SPECIAL19,
	K_SPECIAL20

};