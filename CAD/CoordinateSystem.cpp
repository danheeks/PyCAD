// CordinateSystem.cpp
// Copyright (c) 2009, Dan Heeks
// This program is released under the BSD license. See the file COPYING for details.

#include "stdafx.h"
#include "CoordinateSystem.h"
#include "GripData.h"
#include "Material.h"
#include "strconv.h"

double CoordinateSystem::size = 30;
bool CoordinateSystem::size_is_pixels = true;
bool CoordinateSystem::rendering_current = false;

static unsigned char bitmapX[11] = {0x41, 0x41, 0x22, 0x14, 0x14, 0x08, 0x14, 0x14, 0x22, 0x41, 0x41};
static unsigned char bitmapY[11] = {0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x14, 0x14, 0x22, 0x22, 0x41};
static unsigned char bitmapZ[11] = {0x3f, 0x10, 0x10, 0x08, 0x08, 0x08, 0x04, 0x04, 0x02, 0x02, 0x3f};

CoordinateSystem::CoordinateSystem(const std::wstring& str, const Point3d &o, const Point3d &x, const Point3d &y)
{
	m_title = str;
	m_o = o;
	m_x = x;
	m_y = y;
}



CoordinateSystem::CoordinateSystem(const CoordinateSystem &c)
{
	operator=(c);
}

const CoordinateSystem& CoordinateSystem::operator=(const CoordinateSystem &c)
{
	HeeksObj::operator=(c);
	m_o = c.m_o;
	m_x = c.m_x;
	m_y = c.m_y;
	return *this;
}

CoordinateSystem::~CoordinateSystem(void)
{
}

const wchar_t* CoordinateSystem::GetIconFilePath()
{
	static std::wstring iconpath = theApp->GetResFolder() + L"/icons/coordsys.png";
	return iconpath.c_str();
}

// static
void CoordinateSystem::RenderArrow()
{
	// renders an arrow
	// to do - do it with fewer triangles
	glBegin(GL_TRIANGLES);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.000394265, 0, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0968583, 0.024869, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.1, -2.44921e-017, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.000394265, 0, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0876307, 0.0481754, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0968583, 0.024869, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.000394265, 0, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0728969, 0.0684547, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0876307, 0.0481754, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.000394265, 0, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0535827, 0.0844328, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0728969, 0.0684547, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.000394265, 0, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0309017, 0.0951057, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0535827, 0.0844328, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.000394265, 0, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.00627905, 0.0998027, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0309017, 0.0951057, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.000394265, 0, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0187381, 0.0982287, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.00627905, 0.0998027, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.000394265, 0, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0425779, 0.0904827, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0187381, 0.0982287, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.000394265, 0, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0637424, 0.0770513, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0425779, 0.0904827, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.000394265, 0, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0809017, 0.0587785, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0637424, 0.0770513, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.000394265, 0, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0929776, 0.0368125, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0809017, 0.0587785, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.000394265, 0, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0992115, 0.0125333, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0929776, 0.0368125, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.000394265, 0, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0992115, -0.0125333, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0992115, 0.0125333, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.000394265, 0, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0929776, -0.0368125, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0992115, -0.0125333, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.000394265, 0, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0809017, -0.0587785, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0929776, -0.0368125, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.000394265, 0, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0637424, -0.0770513, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0809017, -0.0587785, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.000394265, 0, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0425779, -0.0904827, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0637424, -0.0770513, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.000394265, 0, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0187381, -0.0982287, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0425779, -0.0904827, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.000394265, 0, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.00627905, -0.0998027, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0187381, -0.0982287, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.000394265, 0, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0309017, -0.0951057, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.00627905, -0.0998027, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.000394265, 0, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0535827, -0.0844328, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0309017, -0.0951057, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.000394265, 0, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0728969, -0.0684547, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0535827, -0.0844328, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.000394265, 0, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0876307, -0.0481754, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0728969, -0.0684547, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.000394265, 0, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0968583, -0.024869, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0876307, -0.0481754, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.000394265, 0, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.1, -2.44921e-017, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0968583, -0.024869, 0);
	glNormal3d(0.968583, 0.24869, -0);
	glVertex3d(0.0968583, 0.024869, 0);
	glNormal3d(1, -1.03695e-013, 0);
	glVertex3d(0.1, -2.44921e-017, 0.679575);
	glNormal3d(1, 4.13891e-013, -0);
	glVertex3d(0.1, -2.44921e-017, 0);
	glNormal3d(0.965926, 0.258819, -0);
	glVertex3d(0.0965926, 0.0258819, 0.679575);
	glNormal3d(1, -1.03695e-013, 0);
	glVertex3d(0.1, -2.44921e-017, 0.679575);
	glNormal3d(0.968583, 0.24869, -0);
	glVertex3d(0.0968583, 0.024869, 0);
	glNormal3d(0.876307, 0.481754, -0);
	glVertex3d(0.0876307, 0.0481754, 0);
	glNormal3d(0.965926, 0.258819, -0);
	glVertex3d(0.0965926, 0.0258819, 0.679575);
	glNormal3d(0.968583, 0.24869, -0);
	glVertex3d(0.0968583, 0.024869, 0);
	glNormal3d(0.866025, 0.5, -0);
	glVertex3d(0.0866025, 0.05, 0.679575);
	glNormal3d(0.965926, 0.258819, -0);
	glVertex3d(0.0965926, 0.0258819, 0.679575);
	glNormal3d(0.876307, 0.481754, -0);
	glVertex3d(0.0876307, 0.0481754, 0);
	glNormal3d(0.728969, 0.684547, -0);
	glVertex3d(0.0728969, 0.0684547, 0);
	glNormal3d(0.866025, 0.5, -0);
	glVertex3d(0.0866025, 0.05, 0.679575);
	glNormal3d(0.876307, 0.481754, -0);
	glVertex3d(0.0876307, 0.0481754, 0);
	glNormal3d(0.707107, 0.707107, -0);
	glVertex3d(0.0707107, 0.0707107, 0.679575);
	glNormal3d(0.866025, 0.5, -0);
	glVertex3d(0.0866025, 0.05, 0.679575);
	glNormal3d(0.728969, 0.684547, -0);
	glVertex3d(0.0728969, 0.0684547, 0);
	glNormal3d(0.535827, 0.844328, -0);
	glVertex3d(0.0535827, 0.0844328, 0);
	glNormal3d(0.707107, 0.707107, -0);
	glVertex3d(0.0707107, 0.0707107, 0.679575);
	glNormal3d(0.728969, 0.684547, -0);
	glVertex3d(0.0728969, 0.0684547, 0);
	glNormal3d(0.5, 0.866025, -0);
	glVertex3d(0.05, 0.0866025, 0.679575);
	glNormal3d(0.707107, 0.707107, -0);
	glVertex3d(0.0707107, 0.0707107, 0.679575);
	glNormal3d(0.535827, 0.844328, -0);
	glVertex3d(0.0535827, 0.0844328, 0);
	glNormal3d(0.309017, 0.951057, -0);
	glVertex3d(0.0309017, 0.0951057, 0);
	glNormal3d(0.5, 0.866025, -0);
	glVertex3d(0.05, 0.0866025, 0.679575);
	glNormal3d(0.535827, 0.844328, -0);
	glVertex3d(0.0535827, 0.0844328, 0);
	glNormal3d(0.258819, 0.965926, -0);
	glVertex3d(0.0258819, 0.0965926, 0.679575);
	glNormal3d(0.5, 0.866025, -0);
	glVertex3d(0.05, 0.0866025, 0.679575);
	glNormal3d(0.309017, 0.951057, -0);
	glVertex3d(0.0309017, 0.0951057, 0);
	glNormal3d(0.0627905, 0.998027, -0);
	glVertex3d(0.00627905, 0.0998027, 0);
	glNormal3d(0.258819, 0.965926, -0);
	glVertex3d(0.0258819, 0.0965926, 0.679575);
	glNormal3d(0.309017, 0.951057, -0);
	glVertex3d(0.0309017, 0.0951057, 0);
	glNormal3d(1.0309e-013, 1, -0);
	glVertex3d(-3.21629e-017, 0.1, 0.679575);
	glNormal3d(0.258819, 0.965926, -0);
	glVertex3d(0.0258819, 0.0965926, 0.679575);
	glNormal3d(0.0627905, 0.998027, -0);
	glVertex3d(0.00627905, 0.0998027, 0);
	glNormal3d(-0.187381, 0.982287, 0);
	glVertex3d(-0.0187381, 0.0982287, 0);
	glNormal3d(1.0309e-013, 1, -0);
	glVertex3d(-3.21629e-017, 0.1, 0.679575);
	glNormal3d(0.0627905, 0.998027, -0);
	glVertex3d(0.00627905, 0.0998027, 0);
	glNormal3d(-0.258819, 0.965926, 0);
	glVertex3d(-0.0258819, 0.0965926, 0.679575);
	glNormal3d(1.0309e-013, 1, -0);
	glVertex3d(-3.21629e-017, 0.1, 0.679575);
	glNormal3d(-0.187381, 0.982287, 0);
	glVertex3d(-0.0187381, 0.0982287, 0);
	glNormal3d(-0.425779, 0.904827, 0);
	glVertex3d(-0.0425779, 0.0904827, 0);
	glNormal3d(-0.258819, 0.965926, 0);
	glVertex3d(-0.0258819, 0.0965926, 0.679575);
	glNormal3d(-0.187381, 0.982287, 0);
	glVertex3d(-0.0187381, 0.0982287, 0);
	glNormal3d(-0.5, 0.866025, 0);
	glVertex3d(-0.05, 0.0866025, 0.679575);
	glNormal3d(-0.258819, 0.965926, 0);
	glVertex3d(-0.0258819, 0.0965926, 0.679575);
	glNormal3d(-0.425779, 0.904827, 0);
	glVertex3d(-0.0425779, 0.0904827, 0);
	glNormal3d(-0.637424, 0.770513, 0);
	glVertex3d(-0.0637424, 0.0770513, 0);
	glNormal3d(-0.5, 0.866025, 0);
	glVertex3d(-0.05, 0.0866025, 0.679575);
	glNormal3d(-0.425779, 0.904827, 0);
	glVertex3d(-0.0425779, 0.0904827, 0);
	glNormal3d(-0.707107, 0.707107, 0);
	glVertex3d(-0.0707107, 0.0707107, 0.679575);
	glNormal3d(-0.5, 0.866025, 0);
	glVertex3d(-0.05, 0.0866025, 0.679575);
	glNormal3d(-0.637424, 0.770513, 0);
	glVertex3d(-0.0637424, 0.0770513, 0);
	glNormal3d(-0.809017, 0.587785, 0);
	glVertex3d(-0.0809017, 0.0587785, 0);
	glNormal3d(-0.707107, 0.707107, 0);
	glVertex3d(-0.0707107, 0.0707107, 0.679575);
	glNormal3d(-0.637424, 0.770513, 0);
	glVertex3d(-0.0637424, 0.0770513, 0);
	glNormal3d(-0.866025, 0.5, 0);
	glVertex3d(-0.0866025, 0.05, 0.679575);
	glNormal3d(-0.707107, 0.707107, 0);
	glVertex3d(-0.0707107, 0.0707107, 0.679575);
	glNormal3d(-0.809017, 0.587785, 0);
	glVertex3d(-0.0809017, 0.0587785, 0);
	glNormal3d(-0.929776, 0.368125, 0);
	glVertex3d(-0.0929776, 0.0368125, 0);
	glNormal3d(-0.866025, 0.5, 0);
	glVertex3d(-0.0866025, 0.05, 0.679575);
	glNormal3d(-0.809017, 0.587785, 0);
	glVertex3d(-0.0809017, 0.0587785, 0);
	glNormal3d(-0.965926, 0.258819, 0);
	glVertex3d(-0.0965926, 0.0258819, 0.679575);
	glNormal3d(-0.866025, 0.5, 0);
	glVertex3d(-0.0866025, 0.05, 0.679575);
	glNormal3d(-0.929776, 0.368125, 0);
	glVertex3d(-0.0929776, 0.0368125, 0);
	glNormal3d(-0.992115, 0.125333, 0);
	glVertex3d(-0.0992115, 0.0125333, 0);
	glNormal3d(-0.965926, 0.258819, 0);
	glVertex3d(-0.0965926, 0.0258819, 0.679575);
	glNormal3d(-0.929776, 0.368125, 0);
	glVertex3d(-0.0929776, 0.0368125, 0);
	glNormal3d(-1, 1.04039e-013, 0);
	glVertex3d(-0.1, 1.83691e-017, 0.679575);
	glNormal3d(-0.965926, 0.258819, 0);
	glVertex3d(-0.0965926, 0.0258819, 0.679575);
	glNormal3d(-0.992115, 0.125333, 0);
	glVertex3d(-0.0992115, 0.0125333, 0);
	glNormal3d(-0.992115, -0.125333, 0);
	glVertex3d(-0.0992115, -0.0125333, 0);
	glNormal3d(-1, 1.04039e-013, 0);
	glVertex3d(-0.1, 1.83691e-017, 0.679575);
	glNormal3d(-0.992115, 0.125333, 0);
	glVertex3d(-0.0992115, 0.0125333, 0);
	glNormal3d(-0.965926, -0.258819, 0);
	glVertex3d(-0.0965926, -0.0258819, 0.679575);
	glNormal3d(-1, 1.04039e-013, 0);
	glVertex3d(-0.1, 1.83691e-017, 0.679575);
	glNormal3d(-0.992115, -0.125333, 0);
	glVertex3d(-0.0992115, -0.0125333, 0);
	glNormal3d(-0.929776, -0.368125, 0);
	glVertex3d(-0.0929776, -0.0368125, 0);
	glNormal3d(-0.965926, -0.258819, 0);
	glVertex3d(-0.0965926, -0.0258819, 0.679575);
	glNormal3d(-0.992115, -0.125333, 0);
	glVertex3d(-0.0992115, -0.0125333, 0);
	glNormal3d(-0.866025, -0.5, 0);
	glVertex3d(-0.0866025, -0.05, 0.679575);
	glNormal3d(-0.965926, -0.258819, 0);
	glVertex3d(-0.0965926, -0.0258819, 0.679575);
	glNormal3d(-0.929776, -0.368125, 0);
	glVertex3d(-0.0929776, -0.0368125, 0);
	glNormal3d(-0.809017, -0.587785, 0);
	glVertex3d(-0.0809017, -0.0587785, 0);
	glNormal3d(-0.866025, -0.5, 0);
	glVertex3d(-0.0866025, -0.05, 0.679575);
	glNormal3d(-0.929776, -0.368125, 0);
	glVertex3d(-0.0929776, -0.0368125, 0);
	glNormal3d(-0.707107, -0.707107, 0);
	glVertex3d(-0.0707107, -0.0707107, 0.679575);
	glNormal3d(-0.866025, -0.5, 0);
	glVertex3d(-0.0866025, -0.05, 0.679575);
	glNormal3d(-0.809017, -0.587785, 0);
	glVertex3d(-0.0809017, -0.0587785, 0);
	glNormal3d(-0.637424, -0.770513, 0);
	glVertex3d(-0.0637424, -0.0770513, 0);
	glNormal3d(-0.707107, -0.707107, 0);
	glVertex3d(-0.0707107, -0.0707107, 0.679575);
	glNormal3d(-0.809017, -0.587785, 0);
	glVertex3d(-0.0809017, -0.0587785, 0);
	glNormal3d(-0.5, -0.866025, 0);
	glVertex3d(-0.05, -0.0866025, 0.679575);
	glNormal3d(-0.707107, -0.707107, 0);
	glVertex3d(-0.0707107, -0.0707107, 0.679575);
	glNormal3d(-0.637424, -0.770513, 0);
	glVertex3d(-0.0637424, -0.0770513, 0);
	glNormal3d(-0.425779, -0.904827, 0);
	glVertex3d(-0.0425779, -0.0904827, 0);
	glNormal3d(-0.5, -0.866025, 0);
	glVertex3d(-0.05, -0.0866025, 0.679575);
	glNormal3d(-0.637424, -0.770513, 0);
	glVertex3d(-0.0637424, -0.0770513, 0);
	glNormal3d(-0.258819, -0.965926, 0);
	glVertex3d(-0.0258819, -0.0965926, 0.679575);
	glNormal3d(-0.5, -0.866025, 0);
	glVertex3d(-0.05, -0.0866025, 0.679575);
	glNormal3d(-0.425779, -0.904827, 0);
	glVertex3d(-0.0425779, -0.0904827, 0);
	glNormal3d(-0.187381, -0.982287, 0);
	glVertex3d(-0.0187381, -0.0982287, 0);
	glNormal3d(-0.258819, -0.965926, 0);
	glVertex3d(-0.0258819, -0.0965926, 0.679575);
	glNormal3d(-0.425779, -0.904827, 0);
	glVertex3d(-0.0425779, -0.0904827, 0);
	glNormal3d(3.09791e-013, -1, 0);
	glVertex3d(-2.44921e-017, -0.1, 0.679575);
	glNormal3d(-0.258819, -0.965926, 0);
	glVertex3d(-0.0258819, -0.0965926, 0.679575);
	glNormal3d(-0.187381, -0.982287, 0);
	glVertex3d(-0.0187381, -0.0982287, 0);
	glNormal3d(0.0627905, -0.998027, 0);
	glVertex3d(0.00627905, -0.0998027, 0);
	glNormal3d(3.09791e-013, -1, 0);
	glVertex3d(-2.44921e-017, -0.1, 0.679575);
	glNormal3d(-0.187381, -0.982287, 0);
	glVertex3d(-0.0187381, -0.0982287, 0);
	glNormal3d(0.258819, -0.965926, 0);
	glVertex3d(0.0258819, -0.0965926, 0.679575);
	glNormal3d(3.09791e-013, -1, 0);
	glVertex3d(-2.44921e-017, -0.1, 0.679575);
	glNormal3d(0.0627905, -0.998027, 0);
	glVertex3d(0.00627905, -0.0998027, 0);
	glNormal3d(0.309017, -0.951057, 0);
	glVertex3d(0.0309017, -0.0951057, 0);
	glNormal3d(0.258819, -0.965926, 0);
	glVertex3d(0.0258819, -0.0965926, 0.679575);
	glNormal3d(0.0627905, -0.998027, 0);
	glVertex3d(0.00627905, -0.0998027, 0);
	glNormal3d(0.5, -0.866025, 0);
	glVertex3d(0.05, -0.0866025, 0.679575);
	glNormal3d(0.258819, -0.965926, 0);
	glVertex3d(0.0258819, -0.0965926, 0.679575);
	glNormal3d(0.309017, -0.951057, 0);
	glVertex3d(0.0309017, -0.0951057, 0);
	glNormal3d(0.535827, -0.844328, 0);
	glVertex3d(0.0535827, -0.0844328, 0);
	glNormal3d(0.5, -0.866025, 0);
	glVertex3d(0.05, -0.0866025, 0.679575);
	glNormal3d(0.309017, -0.951057, 0);
	glVertex3d(0.0309017, -0.0951057, 0);
	glNormal3d(0.707107, -0.707107, 0);
	glVertex3d(0.0707107, -0.0707107, 0.679575);
	glNormal3d(0.5, -0.866025, 0);
	glVertex3d(0.05, -0.0866025, 0.679575);
	glNormal3d(0.535827, -0.844328, 0);
	glVertex3d(0.0535827, -0.0844328, 0);
	glNormal3d(0.728969, -0.684547, 0);
	glVertex3d(0.0728969, -0.0684547, 0);
	glNormal3d(0.707107, -0.707107, 0);
	glVertex3d(0.0707107, -0.0707107, 0.679575);
	glNormal3d(0.535827, -0.844328, 0);
	glVertex3d(0.0535827, -0.0844328, 0);
	glNormal3d(0.866025, -0.5, 0);
	glVertex3d(0.0866025, -0.05, 0.679575);
	glNormal3d(0.707107, -0.707107, 0);
	glVertex3d(0.0707107, -0.0707107, 0.679575);
	glNormal3d(0.728969, -0.684547, 0);
	glVertex3d(0.0728969, -0.0684547, 0);
	glNormal3d(0.876307, -0.481754, 0);
	glVertex3d(0.0876307, -0.0481754, 0);
	glNormal3d(0.866025, -0.5, 0);
	glVertex3d(0.0866025, -0.05, 0.679575);
	glNormal3d(0.728969, -0.684547, 0);
	glVertex3d(0.0728969, -0.0684547, 0);
	glNormal3d(0.965926, -0.258819, 0);
	glVertex3d(0.0965926, -0.0258819, 0.679575);
	glNormal3d(0.866025, -0.5, 0);
	glVertex3d(0.0866025, -0.05, 0.679575);
	glNormal3d(0.876307, -0.481754, 0);
	glVertex3d(0.0876307, -0.0481754, 0);
	glNormal3d(0.968583, -0.24869, 0);
	glVertex3d(0.0968583, -0.024869, 0);
	glNormal3d(0.965926, -0.258819, 0);
	glVertex3d(0.0965926, -0.0258819, 0.679575);
	glNormal3d(0.876307, -0.481754, 0);
	glVertex3d(0.0876307, -0.0481754, 0);
	glNormal3d(1, -2.44921e-016, 0);
	glVertex3d(0.1, -2.44921e-017, 0.679575);
	glNormal3d(0.968583, -0.24869, 0);
	glVertex3d(0.0968583, -0.024869, 0);
	glNormal3d(1, -2.44921e-016, 0);
	glVertex3d(0.1, -2.44921e-017, 0);
	glNormal3d(1, -2.44921e-016, 0);
	glVertex3d(0.1, -2.44921e-017, 0.679575);
	glNormal3d(0.965926, -0.258819, 0);
	glVertex3d(0.0965926, -0.0258819, 0.679575);
	glNormal3d(0.968583, -0.24869, 0);
	glVertex3d(0.0968583, -0.024869, 0);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0965926, 0.0258819, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.184309, 0.023286, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.172727, 0.0683949, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0965926, 0.0258819, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.1, 1.83691e-017, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.184309, 0.023286, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0258819, -0.0965926, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0574318, -0.176699, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0116847, -0.185426, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0258819, -0.0965926, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0116847, -0.185426, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-2.44921e-017, -0.1, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.179974, -0.0462048, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.16283, -0.0895064, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0965926, -0.0258819, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.179974, -0.0462048, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0965926, -0.0258819, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.1, -2.44921e-017, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0866025, 0.05, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.172727, 0.0683949, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.150291, 0.109206, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0866025, 0.05, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0965926, 0.0258819, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.172727, 0.0683949, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.05, -0.0866025, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0995714, -0.15687, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0574318, -0.176699, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.05, -0.0866025, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0574318, -0.176699, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0258819, -0.0965926, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0707107, 0.0707107, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0866025, 0.05, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.150291, 0.109206, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0347954, 0.182502, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-3.21629e-017, 0.1, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0258819, 0.0965926, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0347954, 0.182502, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0258819, 0.0965926, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.079088, 0.16811, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.185811, -4.55046e-017, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.179974, -0.0462048, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.1, -2.44921e-017, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0707107, -0.0707107, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.11841, -0.143156, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.150291, -0.109206, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0707107, -0.0707107, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0995714, -0.15687, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.05, -0.0866025, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0116847, 0.185426, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0258819, 0.0965926, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-3.21629e-017, 0.1, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.135456, -0.127184, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0995714, -0.15687, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0707107, -0.0707107, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.05, -0.0866025, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.079088, -0.16811, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.11841, -0.143156, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0116847, 0.185426, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-3.21629e-017, 0.1, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0347954, 0.182502, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.11841, 0.143156, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0707107, 0.0707107, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.150291, 0.109206, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.179974, 0.0462048, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.1, -2.44921e-017, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0965926, 0.0258819, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.05, -0.0866025, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.11841, -0.143156, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0707107, -0.0707107, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.05, 0.0866025, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0707107, 0.0707107, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.11841, 0.143156, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.179974, 0.0462048, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.185811, -4.55046e-017, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.1, -2.44921e-017, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0866025, -0.05, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.150291, -0.109206, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.172727, -0.0683949, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0866025, -0.05, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.135456, -0.127184, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0707107, -0.0707107, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0866025, -0.05, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0707107, -0.0707107, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.150291, -0.109206, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0574318, 0.176699, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.05, 0.0866025, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0258819, 0.0965926, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0258819, -0.0965926, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0347954, -0.182502, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.079088, -0.16811, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0574318, 0.176699, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0258819, 0.0965926, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0116847, 0.185426, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0258819, -0.0965926, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.079088, -0.16811, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.05, -0.0866025, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.16283, 0.0895064, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0965926, 0.0258819, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0866025, 0.05, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.16283, 0.0895064, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.179974, 0.0462048, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0965926, 0.0258819, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0965926, -0.0258819, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.172727, -0.0683949, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.184309, -0.023286, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0965926, -0.0258819, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0866025, -0.05, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.172727, -0.0683949, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0995714, 0.15687, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0707107, 0.0707107, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.05, 0.0866025, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0995714, 0.15687, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.05, 0.0866025, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0574318, 0.176699, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.135456, 0.127184, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0866025, 0.05, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0707107, 0.0707107, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.135456, 0.127184, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0707107, 0.0707107, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0995714, 0.15687, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.135456, 0.127184, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.16283, 0.0895064, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0866025, 0.05, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.16283, -0.0895064, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.135456, -0.127184, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0866025, -0.05, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-2.44921e-017, -0.1, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0116847, -0.185426, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0347954, -0.182502, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.16283, -0.0895064, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0866025, -0.05, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(0.0965926, -0.0258819, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-2.44921e-017, -0.1, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0347954, -0.182502, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0258819, -0.0965926, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.079088, 0.16811, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0258819, 0.0965926, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.05, 0.0866025, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.079088, 0.16811, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.05, 0.0866025, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.11841, 0.143156, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.1, 1.83691e-017, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.184309, -0.023286, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.184309, 0.023286, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.1, 1.83691e-017, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.0965926, -0.0258819, 0.679575);
	glNormal3d(-0, -0, -1);
	glVertex3d(-0.184309, -0.023286, 0.679575);
	glNormal3d(0.839223, -0.215476, 0.499274);
	glVertex3d(0.179974, -0.0462048, 0.679575);
	glNormal3d(0.866444, 0, 0.499274);
	glVertex3d(0.185811, -4.55046e-017, 0.679575);
	glNormal3d(0.866444, 0, 0.499274);
	glVertex3d(0.00112937, -2.72032e-019, 1.00007);
	glNormal3d(0.839223, -0.215476, 0.499274);
	glVertex3d(0.179974, -0.0462048, 0.679575);
	glNormal3d(0.866444, 0, 0.499274);
	glVertex3d(0.00112937, -2.72032e-019, 1.00007);
	glNormal3d(0.839223, -0.215476, 0.499274);
	glVertex3d(0.00109448, -0.000276217, 1.00007);
	glNormal3d(0.759271, -0.417413, 0.499274);
	glVertex3d(0.16283, -0.0895064, 0.679575);
	glNormal3d(0.839223, -0.215476, 0.499274);
	glVertex3d(0.00109448, -0.000276217, 1.00007);
	glNormal3d(0.759271, -0.417413, 0.499274);
	glVertex3d(0.000991989, -0.000535079, 1.00007);
	glNormal3d(0.759271, -0.417413, 0.499274);
	glVertex3d(0.16283, -0.0895064, 0.679575);
	glNormal3d(0.839223, -0.215476, 0.499274);
	glVertex3d(0.179974, -0.0462048, 0.679575);
	glNormal3d(0.839223, -0.215476, 0.499274);
	glVertex3d(0.00109448, -0.000276217, 1.00007);
	glNormal3d(0.631611, -0.593122, 0.499274);
	glVertex3d(0.135456, -0.127184, 0.679575);
	glNormal3d(0.759271, -0.417413, 0.499274);
	glVertex3d(0.000991989, -0.000535079, 1.00007);
	glNormal3d(0.631611, -0.593122, 0.499274);
	glVertex3d(0.000828342, -0.00076032, 1.00007);
	glNormal3d(0.631611, -0.593122, 0.499274);
	glVertex3d(0.135456, -0.127184, 0.679575);
	glNormal3d(0.759271, -0.417413, 0.499274);
	glVertex3d(0.16283, -0.0895064, 0.679575);
	glNormal3d(0.759271, -0.417413, 0.499274);
	glVertex3d(0.000991989, -0.000535079, 1.00007);
	glNormal3d(0.464264, -0.731563, 0.499274);
	glVertex3d(0.0995714, -0.15687, 0.679575);
	glNormal3d(0.631611, -0.593122, 0.499274);
	glVertex3d(0.000828342, -0.00076032, 1.00007);
	glNormal3d(0.464264, -0.731563, 0.499274);
	glVertex3d(0.000613821, -0.000937787, 1.00007);
	glNormal3d(0.464264, -0.731563, 0.499274);
	glVertex3d(0.0995714, -0.15687, 0.679575);
	glNormal3d(0.631611, -0.593122, 0.499274);
	glVertex3d(0.135456, -0.127184, 0.679575);
	glNormal3d(0.631611, -0.593122, 0.499274);
	glVertex3d(0.000828342, -0.00076032, 1.00007);
	glNormal3d(0.267746, -0.824038, 0.499274);
	glVertex3d(0.0574318, -0.176699, 0.679575);
	glNormal3d(0.464264, -0.731563, 0.499274);
	glVertex3d(0.0995714, -0.15687, 0.679575);
	glNormal3d(0.464264, -0.731563, 0.499274);
	glVertex3d(0.000613821, -0.000937787, 1.00007);
	glNormal3d(0.267746, -0.824038, 0.499274);
	glVertex3d(0.0574318, -0.176699, 0.679575);
	glNormal3d(0.464264, -0.731563, 0.499274);
	glVertex3d(0.000613821, -0.000937787, 1.00007);
	glNormal3d(0.267746, -0.824038, 0.499274);
	glVertex3d(0.000361905, -0.00105633, 1.00007);
	glNormal3d(0.0544045, -0.864735, 0.499274);
	glVertex3d(0.0116847, -0.185426, 0.679575);
	glNormal3d(0.267746, -0.824038, 0.499274);
	glVertex3d(0.0574318, -0.176699, 0.679575);
	glNormal3d(0.267746, -0.824038, 0.499274);
	glVertex3d(0.000361905, -0.00105633, 1.00007);
	glNormal3d(0.0544045, -0.864735, 0.499274);
	glVertex3d(0.0116847, -0.185426, 0.679575);
	glNormal3d(0.267746, -0.824038, 0.499274);
	glVertex3d(0.000361905, -0.00105633, 1.00007);
	glNormal3d(0.0544045, -0.864735, 0.499274);
	glVertex3d(8.8424e-005, -0.0011085, 1.00007);
	glNormal3d(-0.162355, -0.851097, 0.499274);
	glVertex3d(-0.0347954, -0.182502, 0.679575);
	glNormal3d(0.0544045, -0.864735, 0.499274);
	glVertex3d(0.0116847, -0.185426, 0.679575);
	glNormal3d(0.0544045, -0.864735, 0.499274);
	glVertex3d(8.8424e-005, -0.0011085, 1.00007);
	glNormal3d(-0.162355, -0.851097, 0.499274);
	glVertex3d(-0.0347954, -0.182502, 0.679575);
	glNormal3d(0.0544045, -0.864735, 0.499274);
	glVertex3d(8.8424e-005, -0.0011085, 1.00007);
	glNormal3d(-0.162355, -0.851097, 0.499274);
	glVertex3d(-0.000189439, -0.00109102, 1.00007);
	glNormal3d(-0.368914, -0.783982, 0.499274);
	glVertex3d(-0.079088, -0.16811, 0.679575);
	glNormal3d(-0.162355, -0.851097, 0.499274);
	glVertex3d(-0.0347954, -0.182502, 0.679575);
	glNormal3d(-0.162355, -0.851097, 0.499274);
	glVertex3d(-0.000189439, -0.00109102, 1.00007);
	glNormal3d(-0.368914, -0.783982, 0.499274);
	glVertex3d(-0.079088, -0.16811, 0.679575);
	glNormal3d(-0.162355, -0.851097, 0.499274);
	glVertex3d(-0.000189439, -0.00109102, 1.00007);
	glNormal3d(-0.368914, -0.783982, 0.499274);
	glVertex3d(-0.000454226, -0.00100498, 1.00007);
	glNormal3d(-0.552292, -0.667607, 0.499274);
	glVertex3d(-0.11841, -0.143156, 0.679575);
	glNormal3d(-0.368914, -0.783982, 0.499274);
	glVertex3d(-0.000454226, -0.00100498, 1.00007);
	glNormal3d(-0.552292, -0.667607, 0.499274);
	glVertex3d(-0.000689298, -0.000855802, 1.00007);
	glNormal3d(-0.552292, -0.667607, 0.499274);
	glVertex3d(-0.11841, -0.143156, 0.679575);
	glNormal3d(-0.368914, -0.783982, 0.499274);
	glVertex3d(-0.079088, -0.16811, 0.679575);
	glNormal3d(-0.368914, -0.783982, 0.499274);
	glVertex3d(-0.000454226, -0.00100498, 1.00007);
	glNormal3d(-0.700968, -0.509283, 0.499274);
	glVertex3d(-0.150291, -0.109206, 0.679575);
	glNormal3d(-0.552292, -0.667607, 0.499274);
	glVertex3d(-0.11841, -0.143156, 0.679575);
	glNormal3d(-0.552292, -0.667607, 0.499274);
	glVertex3d(-0.000689298, -0.000855802, 1.00007);
	glNormal3d(-0.700968, -0.509283, 0.499274);
	glVertex3d(-0.150291, -0.109206, 0.679575);
	glNormal3d(-0.552292, -0.667607, 0.499274);
	glVertex3d(-0.000689298, -0.000855802, 1.00007);
	glNormal3d(-0.700968, -0.509283, 0.499274);
	glVertex3d(-0.000879884, -0.000652847, 1.00007);
	glNormal3d(-0.8056, -0.318959, 0.499274);
	glVertex3d(-0.172727, -0.0683949, 0.679575);
	glNormal3d(-0.700968, -0.509283, 0.499274);
	glVertex3d(-0.000879884, -0.000652847, 1.00007);
	glNormal3d(-0.8056, -0.318959, 0.499274);
	glVertex3d(-0.00101401, -0.000408872, 1.00007);
	glNormal3d(-0.8056, -0.318959, 0.499274);
	glVertex3d(-0.172727, -0.0683949, 0.679575);
	glNormal3d(-0.700968, -0.509283, 0.499274);
	glVertex3d(-0.150291, -0.109206, 0.679575);
	glNormal3d(-0.700968, -0.509283, 0.499274);
	glVertex3d(-0.000879884, -0.000652847, 1.00007);
	glNormal3d(-0.859612, -0.108594, 0.499274);
	glVertex3d(-0.184309, -0.023286, 0.679575);
	glNormal3d(-0.8056, -0.318959, 0.499274);
	glVertex3d(-0.00101401, -0.000408872, 1.00007);
	glNormal3d(-0.859612, -0.108594, 0.499274);
	glVertex3d(-0.00108325, -0.000139206, 1.00007);
	glNormal3d(-0.859612, -0.108594, 0.499274);
	glVertex3d(-0.184309, -0.023286, 0.679575);
	glNormal3d(-0.8056, -0.318959, 0.499274);
	glVertex3d(-0.172727, -0.0683949, 0.679575);
	glNormal3d(-0.8056, -0.318959, 0.499274);
	glVertex3d(-0.00101401, -0.000408872, 1.00007);
	glNormal3d(-0.859612, 0.108594, 0.499274);
	glVertex3d(-0.184309, 0.023286, 0.679575);
	glNormal3d(-0.859612, -0.108594, 0.499274);
	glVertex3d(-0.00108325, -0.000139206, 1.00007);
	glNormal3d(-0.859612, 0.108594, 0.499274);
	glVertex3d(-0.00108325, 0.000139206, 1.00007);
	glNormal3d(-0.859612, 0.108594, 0.499274);
	glVertex3d(-0.184309, 0.023286, 0.679575);
	glNormal3d(-0.859612, -0.108594, 0.499274);
	glVertex3d(-0.184309, -0.023286, 0.679575);
	glNormal3d(-0.859612, -0.108594, 0.499274);
	glVertex3d(-0.00108325, -0.000139206, 1.00007);
	glNormal3d(-0.8056, 0.318959, 0.499274);
	glVertex3d(-0.172727, 0.0683949, 0.679575);
	glNormal3d(-0.859612, 0.108594, 0.499274);
	glVertex3d(-0.00108325, 0.000139206, 1.00007);
	glNormal3d(-0.8056, 0.318959, 0.499274);
	glVertex3d(-0.00101401, 0.000408872, 1.00007);
	glNormal3d(-0.8056, 0.318959, 0.499274);
	glVertex3d(-0.172727, 0.0683949, 0.679575);
	glNormal3d(-0.859612, 0.108594, 0.499274);
	glVertex3d(-0.184309, 0.023286, 0.679575);
	glNormal3d(-0.859612, 0.108594, 0.499274);
	glVertex3d(-0.00108325, 0.000139206, 1.00007);
	glNormal3d(-0.700968, 0.509283, 0.499274);
	glVertex3d(-0.150291, 0.109206, 0.679575);
	glNormal3d(-0.8056, 0.318959, 0.499274);
	glVertex3d(-0.00101401, 0.000408872, 1.00007);
	glNormal3d(-0.700968, 0.509283, 0.499274);
	glVertex3d(-0.000879884, 0.000652847, 1.00007);
	glNormal3d(-0.700968, 0.509283, 0.499274);
	glVertex3d(-0.150291, 0.109206, 0.679575);
	glNormal3d(-0.8056, 0.318959, 0.499274);
	glVertex3d(-0.172727, 0.0683949, 0.679575);
	glNormal3d(-0.8056, 0.318959, 0.499274);
	glVertex3d(-0.00101401, 0.000408872, 1.00007);
	glNormal3d(-0.552292, 0.667607, 0.499274);
	glVertex3d(-0.11841, 0.143156, 0.679575);
	glNormal3d(-0.700968, 0.509283, 0.499274);
	glVertex3d(-0.000879884, 0.000652847, 1.00007);
	glNormal3d(-0.552292, 0.667607, 0.499274);
	glVertex3d(-0.000689298, 0.000855802, 1.00007);
	glNormal3d(-0.552292, 0.667607, 0.499274);
	glVertex3d(-0.11841, 0.143156, 0.679575);
	glNormal3d(-0.700968, 0.509283, 0.499274);
	glVertex3d(-0.150291, 0.109206, 0.679575);
	glNormal3d(-0.700968, 0.509283, 0.499274);
	glVertex3d(-0.000879884, 0.000652847, 1.00007);
	glNormal3d(-0.368914, 0.783982, 0.499274);
	glVertex3d(-0.079088, 0.16811, 0.679575);
	glNormal3d(-0.552292, 0.667607, 0.499274);
	glVertex3d(-0.000689298, 0.000855802, 1.00007);
	glNormal3d(-0.368914, 0.783982, 0.499274);
	glVertex3d(-0.000454226, 0.00100498, 1.00007);
	glNormal3d(-0.368914, 0.783982, 0.499274);
	glVertex3d(-0.079088, 0.16811, 0.679575);
	glNormal3d(-0.552292, 0.667607, 0.499274);
	glVertex3d(-0.11841, 0.143156, 0.679575);
	glNormal3d(-0.552292, 0.667607, 0.499274);
	glVertex3d(-0.000689298, 0.000855802, 1.00007);
	glNormal3d(-0.162355, 0.851097, 0.499274);
	glVertex3d(-0.0347954, 0.182502, 0.679575);
	glNormal3d(-0.368914, 0.783982, 0.499274);
	glVertex3d(-0.000454226, 0.00100498, 1.00007);
	glNormal3d(-0.162355, 0.851097, 0.499274);
	glVertex3d(-0.000189439, 0.00109102, 1.00007);
	glNormal3d(-0.162355, 0.851097, 0.499274);
	glVertex3d(-0.0347954, 0.182502, 0.679575);
	glNormal3d(-0.368914, 0.783982, 0.499274);
	glVertex3d(-0.079088, 0.16811, 0.679575);
	glNormal3d(-0.368914, 0.783982, 0.499274);
	glVertex3d(-0.000454226, 0.00100498, 1.00007);
	glNormal3d(0.0544045, 0.864735, 0.499274);
	glVertex3d(0.0116847, 0.185426, 0.679575);
	glNormal3d(-0.162355, 0.851097, 0.499274);
	glVertex3d(-0.000189439, 0.00109102, 1.00007);
	glNormal3d(0.0544045, 0.864735, 0.499274);
	glVertex3d(8.8424e-005, 0.0011085, 1.00007);
	glNormal3d(0.0544045, 0.864735, 0.499274);
	glVertex3d(0.0116847, 0.185426, 0.679575);
	glNormal3d(-0.162355, 0.851097, 0.499274);
	glVertex3d(-0.0347954, 0.182502, 0.679575);
	glNormal3d(-0.162355, 0.851097, 0.499274);
	glVertex3d(-0.000189439, 0.00109102, 1.00007);
	glNormal3d(0.267746, 0.824038, 0.499274);
	glVertex3d(0.0574318, 0.176699, 0.679575);
	glNormal3d(0.0544045, 0.864735, 0.499274);
	glVertex3d(8.8424e-005, 0.0011085, 1.00007);
	glNormal3d(0.267746, 0.824038, 0.499274);
	glVertex3d(0.000361905, 0.00105633, 1.00007);
	glNormal3d(0.267746, 0.824038, 0.499274);
	glVertex3d(0.0574318, 0.176699, 0.679575);
	glNormal3d(0.0544045, 0.864735, 0.499274);
	glVertex3d(0.0116847, 0.185426, 0.679575);
	glNormal3d(0.0544045, 0.864735, 0.499274);
	glVertex3d(8.8424e-005, 0.0011085, 1.00007);
	glNormal3d(0.464264, 0.731563, 0.499274);
	glVertex3d(0.0995714, 0.15687, 0.679575);
	glNormal3d(0.267746, 0.824038, 0.499274);
	glVertex3d(0.000361905, 0.00105633, 1.00007);
	glNormal3d(0.464264, 0.731563, 0.499274);
	glVertex3d(0.000613821, 0.000937787, 1.00007);
	glNormal3d(0.464264, 0.731563, 0.499274);
	glVertex3d(0.0995714, 0.15687, 0.679575);
	glNormal3d(0.267746, 0.824038, 0.499274);
	glVertex3d(0.0574318, 0.176699, 0.679575);
	glNormal3d(0.267746, 0.824038, 0.499274);
	glVertex3d(0.000361905, 0.00105633, 1.00007);
	glNormal3d(0.631611, 0.593122, 0.499274);
	glVertex3d(0.135456, 0.127184, 0.679575);
	glNormal3d(0.464264, 0.731563, 0.499274);
	glVertex3d(0.000613821, 0.000937787, 1.00007);
	glNormal3d(0.631611, 0.593122, 0.499274);
	glVertex3d(0.000828342, 0.00076032, 1.00007);
	glNormal3d(0.631611, 0.593122, 0.499274);
	glVertex3d(0.135456, 0.127184, 0.679575);
	glNormal3d(0.464264, 0.731563, 0.499274);
	glVertex3d(0.0995714, 0.15687, 0.679575);
	glNormal3d(0.464264, 0.731563, 0.499274);
	glVertex3d(0.000613821, 0.000937787, 1.00007);
	glNormal3d(0.759271, 0.417413, 0.499274);
	glVertex3d(0.16283, 0.0895064, 0.679575);
	glNormal3d(0.631611, 0.593122, 0.499274);
	glVertex3d(0.000828342, 0.00076032, 1.00007);
	glNormal3d(0.759271, 0.417413, 0.499274);
	glVertex3d(0.000991989, 0.000535079, 1.00007);
	glNormal3d(0.759271, 0.417413, 0.499274);
	glVertex3d(0.16283, 0.0895064, 0.679575);
	glNormal3d(0.631611, 0.593122, 0.499274);
	glVertex3d(0.135456, 0.127184, 0.679575);
	glNormal3d(0.631611, 0.593122, 0.499274);
	glVertex3d(0.000828342, 0.00076032, 1.00007);
	glNormal3d(0.839223, 0.215476, 0.499274);
	glVertex3d(0.179974, 0.0462048, 0.679575);
	glNormal3d(0.759271, 0.417413, 0.499274);
	glVertex3d(0.000991989, 0.000535079, 1.00007);
	glNormal3d(0.839223, 0.215476, 0.499274);
	glVertex3d(0.00109448, 0.000276217, 1.00007);
	glNormal3d(0.839223, 0.215476, 0.499274);
	glVertex3d(0.179974, 0.0462048, 0.679575);
	glNormal3d(0.759271, 0.417413, 0.499274);
	glVertex3d(0.16283, 0.0895064, 0.679575);
	glNormal3d(0.759271, 0.417413, 0.499274);
	glVertex3d(0.000991989, 0.000535079, 1.00007);
	glNormal3d(0.866444, 3.58826e-013, 0.499274);
	glVertex3d(0.185811, -4.55046e-017, 0.679575);
	glNormal3d(0.839223, 0.215476, 0.499274);
	glVertex3d(0.00109448, 0.000276217, 1.00007);
	glNormal3d(0.866444, 2.12211e-016, 0.499274);
	glVertex3d(0.00112937, -2.72032e-019, 1.00007);
	glNormal3d(0.866444, 3.58826e-013, 0.499274);
	glVertex3d(0.185811, -4.55046e-017, 0.679575);
	glNormal3d(0.839223, 0.215476, 0.499274);
	glVertex3d(0.179974, 0.0462048, 0.679575);
	glNormal3d(0.839223, 0.215476, 0.499274);
	glVertex3d(0.00109448, 0.000276217, 1.00007);
	glEnd();
}

// static
void CoordinateSystem::RenderDatum(bool bright, bool solid)
{
	double s = size;
	if(size_is_pixels)s /= theApp->GetPixelScale();

	if(solid)
	{
		// render an arrow, like I saw on a commercial CAD system
		glEnable(GL_LIGHTING);
		glShadeModel(GL_SMOOTH);
		glPushMatrix();
		glScaled(s, s, s);
		if(bright)Material(HeeksColor(0, 0, 255)).glMaterial(1.0);
		else Material(HeeksColor(64, 64, 128)).glMaterial(1.0);
		RenderArrow();
		if(bright)Material(HeeksColor(255, 0, 0)).glMaterial(1.0);
		else Material(HeeksColor(128, 64, 64)).glMaterial(1.0);
		glRotated(90, 0, 1, 0);
		RenderArrow();
		if(bright)Material(HeeksColor(0, 255, 0)).glMaterial(1.0);
		else Material(HeeksColor(64, 128, 64)).glMaterial(1.0);
		glRotated(90, -1, 0, 0);
		RenderArrow();
		glPopMatrix();
		glShadeModel(GL_FLAT);
		glDisable(GL_LIGHTING);
	}
	else
	{
		// red, green, blue for x, y, z, like I saw on Open Arena
		glBegin(GL_LINES);
		if(bright)glColor3ub(255, 0, 0);
		else glColor3ub(128, 64, 64);
		glVertex3d(0, 0, 0);
		glVertex3d(s, 0, 0);
		if(bright)glColor3ub(0, 255, 0);
		else glColor3ub(64, 128, 64);
		glVertex3d(0, 0, 0);
		glVertex3d(0, s, 0);
		if(bright)glColor3ub(0, 0, 255);
		else glColor3ub(64, 64, 128);
		glVertex3d(0, 0, 0);
		glVertex3d(0, 0, s);
		glEnd();
	}

	if(bright)
	{
		// render X, Y, Z text
		double extra_pixels_out = 10.0;
		double s2 = s + extra_pixels_out /theApp->GetPixelScale();
		glColor3ub(255, 0, 0);
		glRasterPos3d(s2, 0, 0);
		glBitmap(8, 11, 3, 5, 0.0, 0.0, bitmapX);
		glColor3ub(0, 255, 0);
		glRasterPos3d(0, s2, 0);
		glBitmap(8, 11, 3, 5, 0.0, 0.0, bitmapY);
		glColor3ub(0, 0, 255);
		glRasterPos3d(0, 0, s2);
		glBitmap(8, 11, 3, 5, 0.0, 0.0, bitmapZ);
	}
}

void CoordinateSystem::ApplyMatrix()
{
	double m[16];
	GetMatrix().GetTransposed(m);
	glMultMatrixd(m);
}

void CoordinateSystem::glCommands(bool select, bool marked, bool no_color)
{
	if(!select && !rendering_current && this == theApp->m_current_coordinate_system)return; // will get rendered in HeeksCADapp::glCommandsAll
	if(marked)glLineWidth(2);
	glPushMatrix();
	double m[16];
	GetMatrix().GetTransposed(m);
	glMultMatrixd(m);

	bool bright = rendering_current;

	RenderDatum(bright, theApp->m_datum_coords_system_solid_arrows);

	glPopMatrix();
	glLineWidth(1);
}

void CoordinateSystem::GetBox(CBox &box)
{
	Point3d vt(0, 0, 0);
	vt = vt.Transformed(GetMatrix());
	double p[3];
	vt.get(p);
	box.Insert(p);
}

void CoordinateSystem::OnEditString(const wchar_t* str){
	m_title.assign(str);
}

HeeksObj *CoordinateSystem::MakeACopy(void)const
{
	return new CoordinateSystem(*this);
}

void CoordinateSystem::Transform(const Matrix &m)
{
	m_o = m_o.Transformed(m);
	m_x = m_x.Transformed(m);
	m_y = m_y.Transformed(m);
}


void CoordinateSystem::GetProperties(std::list<Property *> *list)
{
	HeeksObj::GetProperties(list);
}

void CoordinateSystem::GetGripperPositions(std::list<GripData> *list, bool just_for_endof)
{
	Matrix mat = GetMatrix();
	double s = size;
	if(size_is_pixels)s /= theApp->GetPixelScale();

	Point3d px(m_o + m_x * s);
	Point3d py(m_o + m_y * s);
	Point3d vz = Point3d(0, 0, 1).Transformed(mat);
	Point3d pz(m_o + vz * s);
	list->push_back(GripData(GripperTypeTranslate,m_o.x,m_o.y,m_o.z,NULL));
	list->push_back(GripData(GripperTypeRotateObject,px.x,px.y,px.z,NULL));
	list->push_back(GripData(GripperTypeRotateObject,py.x,py.y,py.z,NULL));
	list->push_back(GripData(GripperTypeRotateObject,pz.x,pz.y,pz.z,NULL));
}

bool CoordinateSystem::GetScaleAboutMatrix(Matrix &m)
{
	m = GetMatrix();
	return true;
}

void CoordinateSystem::WriteToXML(TiXmlElement *element)
{
	element->SetAttribute("title", Ttc(m_title.c_str()) );
	element->SetDoubleAttribute("ox", m_o.x);
	element->SetDoubleAttribute("oy", m_o.y);
	element->SetDoubleAttribute("oz", m_o.z);
	element->SetDoubleAttribute("xx", m_x.x);
	element->SetDoubleAttribute("xy", m_x.y);
	element->SetDoubleAttribute("xz", m_x.z);
	element->SetDoubleAttribute("yx", m_y.x);
	element->SetDoubleAttribute("yy", m_y.y);
	element->SetDoubleAttribute("yz", m_y.z);
	HeeksObj::WriteToXML(element);
}

Matrix CoordinateSystem::GetMatrix()
{
	return Matrix(m_o, m_x, m_y);
}

void CoordinateSystem::ReadFromXML(TiXmlElement *element)
{
	element->Attribute("ox", &m_o.x);
	element->Attribute("oy", &m_o.y);
	element->Attribute("oz", &m_o.z);
	element->Attribute("xx", &m_x.x);
	element->Attribute("xy", &m_x.y);
	element->Attribute("xz", &m_x.z);
	element->Attribute("yx", &m_y.x);
	element->Attribute("yy", &m_y.y);
	element->Attribute("yz", &m_y.z);
	const char* title = element->Attribute("title");
	if (title)m_title.assign(Ctt(title));
	HeeksObj::ReadFromXML(element);
}

// code for AxesToAngles copied from http://tog.acm.org/GraphicsGems/gemsiv/euler_angle/EulerAngles.c

#define EulSafe	     "\000\001\002\000"
#define EulNext	     "\001\002\000\001"
#define EulGetOrd(ord,i,j,k,h,n,s,f) {unsigned o=ord;f=o&1;o>>=1;s=o&1;o>>=1;n=o&1;o>>=1;i=EulSafe[o&3];j=EulNext[i+n];k=EulNext[i+1-n];h=s?k:i;}
#define EulOrd(i,p,r,f)	   (((((((i)<<1)+(p))<<1)+(r))<<1)+(f))
#define EulOrdZXZs    EulOrd(2,0,1,0)

//static
void CoordinateSystem::AxesToAngles(const Point3d &x, const Point3d &y, double &v_angle, double &h_angle, double &t_angle)
{
	double M[4][4];
	Matrix(Point3d(0, 0, 0), x, y).Get(M[0]);
	int order = EulOrdZXZs;

    int i,j,k,h,n,s,f;
    EulGetOrd(order,i,j,k,h,n,s,f);
    if (s==1) {
	double sy = sqrt(M[i][j]*M[i][j] + M[i][k]*M[i][k]);
	if (sy > 16 * 1.192092896e-07F) {
	    t_angle = atan2(M[i][j], M[i][k]);
	    v_angle = atan2(sy, M[i][i]);
	    h_angle = atan2(M[j][i], -M[k][i]);
	} else {
	    t_angle = atan2(-M[j][k], M[j][j]);
	    v_angle = atan2(sy, M[i][i]);
	    h_angle = 0;
	}
    } else {
	double cy = sqrt(M[i][i]*M[i][i] + M[j][i]*M[j][i]);
	if (cy > 16 * 2.2204460492503131e-016) {
	    t_angle = atan2(M[k][j], M[k][k]);
	    v_angle = atan2(-M[k][i], cy);
	    h_angle = atan2(M[j][i], M[i][i]);
	} else {
	    t_angle = atan2(-M[j][k], M[j][j]);
	    v_angle = atan2(-M[k][i], cy);
	    h_angle = 0;
	}
    }
    if (n==1) {t_angle = -t_angle; v_angle = - v_angle; h_angle = -h_angle;}
    if (f==1) {double t = t_angle; t_angle = h_angle; h_angle = t;}
}

//static
void CoordinateSystem::AnglesToAxes(const double &v_angle, const double
&h_angle, const double &t_angle, Point3d &x, Point3d &y)
{
#if 0
	to do
	Matrix zmat1;
	zmat1.SetRotation(gp_Ax1(Point3d(0, 0, 0), Point3d(0, 0, 1)), t_angle);

	Matrix xmat;
	xmat.SetRotation(gp_Ax1(Point3d(0, 0, 0), Point3d(1, 0, 0)), v_angle);

	Matrix zmat2;
	zmat2.SetRotation(gp_Ax1(Point3d(0, 0, 0), Point3d(0, 0, 1)), h_angle);

	Matrix mat = zmat2 * xmat * zmat1;

	x = Point3d(1, 0, 0).Transformed(mat);
	y = Point3d(0, 1, 0).Transformed(mat);
#endif
} 

static CoordinateSystem* coordinate_system_for_PickFrom3Points = NULL;
static Point3d y_for_PickFrom3Points(0, 1, 0);
static Point3d z_for_PickFrom3Points(0, 0, 1);
static const double unit_vec_tol = 0.0000000001;



static void OnGlCommandsForPickFrom3Points()
{
	CoordinateSystem::rendering_current = true;
	coordinate_system_for_PickFrom3Points->glCommands(false, true, false);
	CoordinateSystem::rendering_current = false;
}

bool CoordinateSystem::PickFrom3Points()
{
#if 0
	CoordinateSystem temp = *this;
	coordinate_system_for_PickFrom3Points = &temp;
	y_for_PickFrom3Points = m_y;
	z_for_PickFrom3Points = m_x ^ m_y;
	m_visible = false;
	theApp->RegisterOnGLCommands(OnGlCommandsForPickFrom3Points);

	double pos[3];

	bool result = false;

	if(theApp->PickPosition(_("Pick the location"), pos, on_set_origin))
	{
		if(theApp->PickPosition(_("Pick a point on the x-axis"), pos, on_set_x))
		{
			result = theApp->PickPosition(_("Pick a point where y > 0"), pos, on_set_y);
		}
	}

	*this = temp;
	theApp->RemoveOnGLCommands(OnGlCommandsForPickFrom3Points);

	theApp->Repaint();

	return result;
#endif
	return true;
}

bool CoordinateSystem::PickFrom1Point()
{
#if 0
	CoordinateSystem temp = *this;
	coordinate_system_for_PickFrom3Points = &temp;
	y_for_PickFrom3Points = m_y;
	z_for_PickFrom3Points = m_x ^ m_y;
	m_visible = false;
	theApp->RegisterOnGLCommands(OnGlCommandsForPickFrom3Points);

	double pos[3];

	bool result = theApp->PickPosition(_("Pick the location"), pos, on_set_origin);
	
	*this = temp;
	theApp->RemoveOnGLCommands(OnGlCommandsForPickFrom3Points);

	theApp->Repaint();

	return result;
#endif
	return false;
}

