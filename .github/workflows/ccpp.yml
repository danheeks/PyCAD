name: Build When Repository Changed

on: [push]

jobs:
  build:
    if: (false)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: dependencies
      run: sudo apt-get install libboost-python-dev python-dev freeglut3-dev
    - name: configure
      run: cd CAD && mkdir build && cd build && cmake ..
    - name: build
      run: cd CAD/build && make
  windows_build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
    - name: configure
      run: cd CAD && mkdir build && cd build && cmake ..
      shell: bash
    - name: build using MSBuild
      run: cd CAD/build && "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/MSBuild/Current/Bin/MSBuild.exe" cad.sln //p:Configuration=Release //p:Platform="x64"
      shell: bash
    - name: ls to see if the .dll was made
      run: cd CAD/build/Release && ls
      shell: bash
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: CAD/build/Release/cad.dll
        asset_name: cad.dll
        asset_content_type: application/dll
